AWSTemplateFormatVersion: '2010-09-09'
Description: 'Nova Sonic App Runner Deployment with ECR'

Resources:
  # ECR Repository
  NovasonicECRRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Sub '${AWS::StackName}-novasonic'
      ImageScanningConfiguration:
        ScanOnPush: true
      LifecyclePolicy:
        LifecyclePolicyText: |
          {
            "rules": [
              {
                "rulePriority": 1,
                "selection": {
                  "tagStatus": "untagged",
                  "countType": "sinceImagePushed",
                  "countUnit": "days",
                  "countNumber": 7
                },
                "action": {
                  "type": "expire"
                }
              }
            ]
          }

  # IAM Role for App Runner
  AppRunnerInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: tasks.apprunner.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonBedrockFullAccess
        - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess
      RoleName: !Sub '${AWS::StackName}-AppRunnerInstanceRole'

  # App Runner Access Role
  AppRunnerAccessRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: build.apprunner.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSAppRunnerServicePolicyForECRAccess
      RoleName: !Sub '${AWS::StackName}-AppRunnerAccessRole'

  # App Runner Service
  NovasonicAppRunnerService:
    Type: AWS::AppRunner::Service
    Properties:
      ServiceName: !Sub '${AWS::StackName}-novasonic-app'
      SourceConfiguration:
        ImageRepository:
          ImageIdentifier: !Sub '${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${NovasonicECRRepository}:latest'
          ImageConfiguration:
            Port: '3009'
            RuntimeEnvironmentVariables:
              - Name: NODE_ENV
                Value: production
              - Name: AWS_REGION
                Value: !Ref AWS::Region
          ImageRepositoryType: ECR
        AccessRoleArn: !GetAtt AppRunnerAccessRole.Arn
        AutoDeploymentsEnabled: false
      InstanceConfiguration:
        Cpu: 1 vCPU
        Memory: 2 GB
        InstanceRoleArn: !GetAtt AppRunnerInstanceRole.Arn
      HealthCheckConfiguration:
        Protocol: HTTP
        Path: /health
        Interval: 10
        Timeout: 5
        HealthyThreshold: 1
        UnhealthyThreshold: 5
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-novasonic-app'

Outputs:
  ECRRepositoryURI:
    Description: ECR Repository URI
    Value: !Sub '${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${NovasonicECRRepository}'
    Export:
      Name: !Sub '${AWS::StackName}-ECRRepositoryURI'
  
  AppRunnerServiceUrl:
    Description: App Runner Service URL
    Value: !Sub 'https://${NovasonicAppRunnerService.ServiceUrl}'
    Export:
      Name: !Sub '${AWS::StackName}-ServiceUrl'